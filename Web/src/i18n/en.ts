import Translation from './base';

const en: Translation = {
  commons: {
    search: 'Search',
    loading: 'Loading...',
    fillAllFields: 'Fill all fields',
    cancel: 'Cancel',
    save: 'Save',
    currentPath: 'Current Path',
    params: 'Parameters',
    selectOption: (label: string) => `Select the option for ${label}`,
    default: 'Default',
    gohome: 'Go to home',
  },
  timeline: {
    title: 'Timeline',
    balance: 'Balance',
    clearFilter: 'Show all',
    registryCount: 'Records',
    filters: 'Filters',
    from: 'From',
    to: 'To',
    apply: 'Apply',
  },
  registry: {
    title: 'Registry',
    description: 'Description',
    value: 'Value',
    date: 'Date',
    account: 'Account',
    paid: 'Paid',
    messages: {
      saved: 'Saved successfully',
    }
  },
  accounts: {
    title: 'Accounts',
    showArchived: 'Show Archived',
    noAccounts: 'There is no account registered yet.',
    addAccount: 'Add Account',
    editAccount: 'Edit Account',
    accountName: 'Account Name',
    bank: 'Bank',
    initialBalance: 'Initial Balance',
    accountColor: 'Account Color',
    includeInTotal: 'Include in Total',
    accountUpdated: 'Account updated successfully',
    accountCreated: 'Account created successfully',
    types: {
      label: 'Types',
      current: 'Current',
      savings: 'Savings',
      investment: 'Investment',
      cash: 'Cash',
    },
  },
  creditcards: {
    title: 'Credit Cards',
    noCreditCards: 'There is no credit card registered yet.',
    addCreditCard: 'Add Credit Card',
    selectedInvoice: 'Selected Invoice',
    editCreditCard: 'Edit Credit Card',
    cardName: 'Card Name',
    brand: 'Brand',
    limit: 'Limit',
    account: 'Account',
    closingDay: 'Closing Day',
    dueDay: 'Due Day',
    creditCardCreated: 'Credit card saved',
    creditCardUpdated: 'Credit card updated',
  },
  categories: {
    title: 'Categories',
    addCategory: 'Add Category',
    categoryName: 'Category Name',
    parentCategory: 'Parent Category',
    categoryCreated: 'Category created successfully',
  },
  groceries: {
    title: 'Groceries',
    addItem: 'Add Item',
    editItem: 'Edit Item',
    name: 'Name',
    barcode: 'Barcode',
    expirationDate: 'Expiration Date',
    quantity: 'Quantity',
    unit: 'Unit',
    paidPrice: 'Paid Price',
    purchaseDate: 'Purchase Date',
    storageLocation: 'Location',
    scanBarcode: 'Scan Barcode',
    itemCreated: 'Item saved',
    productCreated: 'Product saved',
    expired: 'Expired',
    expiringSoon: 'Expiring Soon',
    thisWeek: 'This Week',
    thisMonth: 'This Month',
    valid: 'Valid',
  },
  login: {
    loginWithGoogle: 'Login with Google',
    loginWithApple: 'Login with Apple ID',
  },
  settings: {
    title: 'Settings',
    data: 'Data',
    myData: 'My Data',
    exportData: 'Export My Data',
    exportingData: (filename: string, current: string, max: string) =>
      `Exporting ${filename} (${current}/${max})%`,
    auth: 'Auth',
    logout: 'Logout',
    clearLocalCaches: 'Clear local caches',
    theme: 'Theme',
    density: 'Density',
    loadingDatabaseUsage: 'Loading database usage...',
    language: 'Language',
    toggleEncryption: (disabled: boolean) => disabled ? 'Enable Encryption (DEV only)' : 'Disable Encryption (DEV only)',
    resavingWithEncryption: (filename: string, current: string, max: string) => `Resaving ${filename} (${current}/${max})...`,
    timelineMode: 'Timeline mode',
    timelineModeStart: 'Start',
    timelineModeNext: 'Next',
    timelineCutoffDay: 'Cut-off day',
  },
  dashboard: {
    title: 'Dashboard',
    messages: {
      hello: 'Hello',
      otherThings: 'Other things',
      ideasWelcome: 'Ideas are welcome',
    },
  },
  speech: {
    title: 'Grocery Items',
    howToUseTitle: 'How to use',
    intro1: 'Speak naturally about groceries you already have and those you still need to buy. The assistant will understand your phrases to add, remove or update items and will separate owned items from your shopping list.',
    intro2: 'You can mention the name, expiration, whether it is opened/in use, quantity, how much you paid, where it is stored, etc.',
    examplesTitle: 'Examples:',
    examples: [
      'I need to buy eggs and milk',
      'I bought 2 packs of rice',
      'I have 3 packs of pasta in the cabinet',
      'I have ham and cheese opened in the fridge and they will spoil in 3 days',
      'The coffee package expires in 2 months',
      'I have no more beans'
    ],
    micStart: 'Start listening',
    micStop: 'Stop listening',
    placeholderListeningHasItems: 'Feel free to talk',
    placeholderListeningNoItems: 'Start speaking',
    placeholderNotListening: 'Press the button to speak',
    haveListTitle: 'Have',
    toBuyListTitle: 'To Buy',
    browserNotSupported: 'Browser does not support speech recognition.',
    changeLangTooltip: 'Click to change the language',
    tokensUsed: (tokens: number, price: string) => `Used: ${tokens} Tokens, R$ ${price}`
  }
};

export default en;
